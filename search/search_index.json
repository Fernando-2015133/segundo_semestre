{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Eixo Computa\u00e7\u00e3o - UNIVESP - Grupo de estudos \u00b6 Sobre \u00b6 Grupo criado para compartilhar e estudar c\u00f3digos e assuntos relacionados aos cursos de Tecnologia da Informa\u00e7\u00e3o, Ci\u00eancia de Dados e Engenharia da Computa\u00e7\u00e3o. Proposta \u00b6 A ideia \u00e9 que no come\u00e7o os reposit\u00f3rios venham a ser baseados e guiados por discipinas do curso, dando no in\u00edcio prefer\u00eancia \u00e0 disciplinas mais abrangentes. Depois podemos nos aprofundar, dando exemplos de projetos reais: se aprofundando em linguagens de programa\u00e7\u00e3o com banco de dados, al\u00e9m frameworks, containers, cloud, etc... Estrutura \u00b6 Algoritmo e Programa\u00e7\u00e3o de Computadores I e II (COM110 e COM120) \u00b6 Objetivo: Compreender conceitos b\u00e1sicos de programa\u00e7\u00e3o e descrever algoritmos para resolver problemas utilizando a linguagem de programa\u00e7\u00e3o Python, incluindo depura\u00e7\u00e3o e testes automatizados b\u00e1sicos. Refor\u00e7ar a pr\u00e1tica de programa\u00e7\u00e3o em Python, composi\u00e7\u00e3o de programas com m\u00faltiplos arquivos de c\u00f3digo fonte, uso de bibliotecas, APIs (WEB) e GUIs. No\u00e7\u00f5es de programa\u00e7\u00e3o orientada a objetos. [link] Fundamentos da Internet e Web (COM130) \u00b6 Objetivo: HTML5,CSS3: Estrutura do conte\u00fado versus apar\u00eancia do documento, tags HTML b\u00e1sicas (H1, P, etc) e e extens\u00edveis (div, span, etc), atributos b\u00e1sicos de CSS (color, text-align, etc); seletores CSS; Programa\u00e7\u00e3o Orientada a Objetos (EEP101) \u00b6 Objetivo: Arquitetura de Software: Coes\u00e3o e acoplamento; Aprofundar os conceitos b\u00e1sicos de orienta\u00e7\u00e3o a objetos, entre eles: classes, objetos, interfaces, heran\u00e7a e polimorfismo; Introduzir t\u00e9cnicas de tratamento de erros com exce\u00e7\u00f5es; no\u00e7\u00f5es de padr\u00f5es de projeto (explorando alguns exemplos como Observer, Adapter, Null Object); Apresentar no\u00e7\u00f5es de aspectos, fun\u00e7\u00f5es an\u00f4nimas, closures e t\u00e9cnicas funcionais (Map,Filter, Fold, etc). Estruturas de Dados (EID001) \u00b6 Objetivo: Estruturas b\u00e1sicas para representa\u00e7\u00e3o de informa\u00e7\u00f5es: pilhas, filas e listas ligadas, \u00e1rvores, grafos, tabelas de hash e suas generaliza\u00e7\u00f5es, implementa\u00e7\u00f5es. Algoritmos para constru\u00e7\u00e3o, consulta e manipula\u00e7\u00e3o de tais estruturas. Desenvolvimento, implementa\u00e7\u00e3o e testes de programas usando tais estruturas em aplica\u00e7\u00f5es espec\u00edficas. Page-Rank. Banco de Dados (COM300) \u00b6 Objetivo: Introdu\u00e7\u00e3o a banco de dados (Processamento de Arquivos vs SGBDs, arquitetura de SGBDs), modelagem de dados (conceitual, modelo entidade- relacionamento), Linguagem de Consulta e Manipula\u00e7\u00e3o de Dados (SQL), Indexa\u00e7\u00e3o, Bancos de Dados N\u00e3o Relacionais ou NoSQL (Bancos de Dados Orientados a Documentos, Bancos de Dados em Colunas, Bancos de Orientados a Grafos). Mapeamento objeto-relacional (ORM).","title":"Inicio"},{"location":"#eixo-computacao-univesp-grupo-de-estudos","text":"","title":"Eixo Computa\u00e7\u00e3o - UNIVESP - Grupo de estudos"},{"location":"#sobre","text":"Grupo criado para compartilhar e estudar c\u00f3digos e assuntos relacionados aos cursos de Tecnologia da Informa\u00e7\u00e3o, Ci\u00eancia de Dados e Engenharia da Computa\u00e7\u00e3o.","title":"Sobre"},{"location":"#proposta","text":"A ideia \u00e9 que no come\u00e7o os reposit\u00f3rios venham a ser baseados e guiados por discipinas do curso, dando no in\u00edcio prefer\u00eancia \u00e0 disciplinas mais abrangentes. Depois podemos nos aprofundar, dando exemplos de projetos reais: se aprofundando em linguagens de programa\u00e7\u00e3o com banco de dados, al\u00e9m frameworks, containers, cloud, etc...","title":"Proposta"},{"location":"#estrutura","text":"","title":"Estrutura"},{"location":"#algoritmo-e-programacao-de-computadores-i-e-ii-com110-e-com120","text":"Objetivo: Compreender conceitos b\u00e1sicos de programa\u00e7\u00e3o e descrever algoritmos para resolver problemas utilizando a linguagem de programa\u00e7\u00e3o Python, incluindo depura\u00e7\u00e3o e testes automatizados b\u00e1sicos. Refor\u00e7ar a pr\u00e1tica de programa\u00e7\u00e3o em Python, composi\u00e7\u00e3o de programas com m\u00faltiplos arquivos de c\u00f3digo fonte, uso de bibliotecas, APIs (WEB) e GUIs. No\u00e7\u00f5es de programa\u00e7\u00e3o orientada a objetos. [link]","title":"Algoritmo e Programa\u00e7\u00e3o de Computadores I e II (COM110 e COM120)"},{"location":"#fundamentos-da-internet-e-web-com130","text":"Objetivo: HTML5,CSS3: Estrutura do conte\u00fado versus apar\u00eancia do documento, tags HTML b\u00e1sicas (H1, P, etc) e e extens\u00edveis (div, span, etc), atributos b\u00e1sicos de CSS (color, text-align, etc); seletores CSS;","title":"Fundamentos da Internet e Web (COM130)"},{"location":"#programacao-orientada-a-objetos-eep101","text":"Objetivo: Arquitetura de Software: Coes\u00e3o e acoplamento; Aprofundar os conceitos b\u00e1sicos de orienta\u00e7\u00e3o a objetos, entre eles: classes, objetos, interfaces, heran\u00e7a e polimorfismo; Introduzir t\u00e9cnicas de tratamento de erros com exce\u00e7\u00f5es; no\u00e7\u00f5es de padr\u00f5es de projeto (explorando alguns exemplos como Observer, Adapter, Null Object); Apresentar no\u00e7\u00f5es de aspectos, fun\u00e7\u00f5es an\u00f4nimas, closures e t\u00e9cnicas funcionais (Map,Filter, Fold, etc).","title":"Programa\u00e7\u00e3o Orientada a Objetos (EEP101)"},{"location":"#estruturas-de-dados-eid001","text":"Objetivo: Estruturas b\u00e1sicas para representa\u00e7\u00e3o de informa\u00e7\u00f5es: pilhas, filas e listas ligadas, \u00e1rvores, grafos, tabelas de hash e suas generaliza\u00e7\u00f5es, implementa\u00e7\u00f5es. Algoritmos para constru\u00e7\u00e3o, consulta e manipula\u00e7\u00e3o de tais estruturas. Desenvolvimento, implementa\u00e7\u00e3o e testes de programas usando tais estruturas em aplica\u00e7\u00f5es espec\u00edficas. Page-Rank.","title":"Estruturas de Dados (EID001)"},{"location":"#banco-de-dados-com300","text":"Objetivo: Introdu\u00e7\u00e3o a banco de dados (Processamento de Arquivos vs SGBDs, arquitetura de SGBDs), modelagem de dados (conceitual, modelo entidade- relacionamento), Linguagem de Consulta e Manipula\u00e7\u00e3o de Dados (SQL), Indexa\u00e7\u00e3o, Bancos de Dados N\u00e3o Relacionais ou NoSQL (Bancos de Dados Orientados a Documentos, Bancos de Dados em Colunas, Bancos de Orientados a Grafos). Mapeamento objeto-relacional (ORM).","title":"Banco de Dados (COM300)"},{"location":"OOP/oop/","text":"Programa\u00e7\u00e3o Orientada a Objetos \u00b6 Objetivos: No\u00e7\u00f5es de arquitetura de software com \u00eanfase em programa\u00e7\u00e3o orientada a objetos. Ementa: Arquitetura de Software: Coes\u00e3o e acoplamento; Aprofundar os conceitos b\u00e1sicos de orienta\u00e7\u00e3o a objetos, entre eles: classes, objetos, interfaces, heran\u00e7a e polimorfismo; Introduzir t\u00e9cnicas de tratamento de erros com exce\u00e7\u00f5es; no\u00e7\u00f5es depadr\u00f5es de projeto (explorando alguns exemplos como Observer, Adapter, Null Object); Apresentar no\u00e7\u00f5es de aspectos, fun\u00e7\u00f5es an\u00f4nimas, closures e t\u00e9cnicas funcionais (Map, Filter, Fold, etc). Bibliografia Base: - F\u00e9lix, Rafael. Programa\u00e7\u00e3o orientada a objetos. 2017. Pearson. - Puga, Sandra; Rissetti, Gerson. L\u00f3gica de programa\u00e7\u00e3o e estruturas de dados com aplica\u00e7\u00f5es em Java. 2016. Pearson. - Sommerville, Ian. Engenharia de Software. 2007. Pearson. Bibliografia Complementar: - Stephen, Samuel; Bocutiu, Stefan. Programando com Kotlin. 2017. Novatec. - DEITEL, H. M.; DEITEL, P.J. Java: Como Programar. S\u00e3o Paulo: Pearson Prentice- Hall, 8a Edi\u00e7\u00e3o, 2010. - DEITEL, H. M.; DEITEL, P.J. Java: Como Programar. S\u00e3o Paulo: Pearson Prentice- Hall, 6a Edi\u00e7\u00e3o, 2005. - DEITEL, H. M.; DEITEL, P.J. C++: Como Programar. S\u00e3o Paulo: Pearson Prentice- Hall, 5a Edi\u00e7\u00e3o, 2006. - MIZRAHI, V. V. Treinamento em Linguagem C++: m\u00f3dulo 1. S\u00e3o Paulo: Pearson Prentice-Hall, 2a Edi\u00e7\u00e3o, 2006. - MIZRAHI, V. V. Treinamento em Linguagem C++: m\u00f3dulo 2. S\u00e3o Paulo: Pearson Prentice-Hall, 2a Edi\u00e7\u00e3o, 2006.","title":"OOP"},{"location":"OOP/oop/#programacao-orientada-a-objetos","text":"Objetivos: No\u00e7\u00f5es de arquitetura de software com \u00eanfase em programa\u00e7\u00e3o orientada a objetos. Ementa: Arquitetura de Software: Coes\u00e3o e acoplamento; Aprofundar os conceitos b\u00e1sicos de orienta\u00e7\u00e3o a objetos, entre eles: classes, objetos, interfaces, heran\u00e7a e polimorfismo; Introduzir t\u00e9cnicas de tratamento de erros com exce\u00e7\u00f5es; no\u00e7\u00f5es depadr\u00f5es de projeto (explorando alguns exemplos como Observer, Adapter, Null Object); Apresentar no\u00e7\u00f5es de aspectos, fun\u00e7\u00f5es an\u00f4nimas, closures e t\u00e9cnicas funcionais (Map, Filter, Fold, etc). Bibliografia Base: - F\u00e9lix, Rafael. Programa\u00e7\u00e3o orientada a objetos. 2017. Pearson. - Puga, Sandra; Rissetti, Gerson. L\u00f3gica de programa\u00e7\u00e3o e estruturas de dados com aplica\u00e7\u00f5es em Java. 2016. Pearson. - Sommerville, Ian. Engenharia de Software. 2007. Pearson. Bibliografia Complementar: - Stephen, Samuel; Bocutiu, Stefan. Programando com Kotlin. 2017. Novatec. - DEITEL, H. M.; DEITEL, P.J. Java: Como Programar. S\u00e3o Paulo: Pearson Prentice- Hall, 8a Edi\u00e7\u00e3o, 2010. - DEITEL, H. M.; DEITEL, P.J. Java: Como Programar. S\u00e3o Paulo: Pearson Prentice- Hall, 6a Edi\u00e7\u00e3o, 2005. - DEITEL, H. M.; DEITEL, P.J. C++: Como Programar. S\u00e3o Paulo: Pearson Prentice- Hall, 5a Edi\u00e7\u00e3o, 2006. - MIZRAHI, V. V. Treinamento em Linguagem C++: m\u00f3dulo 1. S\u00e3o Paulo: Pearson Prentice-Hall, 2a Edi\u00e7\u00e3o, 2006. - MIZRAHI, V. V. Treinamento em Linguagem C++: m\u00f3dulo 2. S\u00e3o Paulo: Pearson Prentice-Hall, 2a Edi\u00e7\u00e3o, 2006.","title":"Programa\u00e7\u00e3o Orientada a Objetos"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/algo/","text":"Algoritmos e Programa\u00e7\u00e3o de Computadores Repo criado para: estudos referente a COM110 e COM120 projetos e assuntos relacionados com a ementa da discilina Ementa: Algoritmos: caracteriza\u00e7\u00e3o, nota\u00e7\u00e3o, estruturas b\u00e1sicas. Conceitos de linguagens algor\u00edtmicas: express\u00f5es; comandos sequenciais, seletivos e repetitivos; entrada/sa\u00edda; vari\u00e1veis; constantes; listas, vetores (listas em Python), matrizes, strings; fun\u00e7\u00f5es; escopo de vari\u00e1veis; Desenvolvimento, depura\u00e7\u00e3o, no\u00e7\u00f5es de testes automatizados e documenta\u00e7\u00e3o de programas utilizando linguagem Python. Depura\u00e7\u00e3o de programas. Conceito e uso de pilhas, filas, listas, \u00e1rvores. Recurs\u00e3o. Algoritmos de Ordena\u00e7\u00e3o e Busca. No\u00e7\u00f5es de gerenciamento de mem\u00f3ria e manipula\u00e7\u00e3o de listas. M\u00f3dulos e no\u00e7\u00f5es de objetos, arquivos. Modulariza\u00e7\u00e3o (m\u00f3dulos, bibliotecas, interfaces). Uso de APIs b\u00e1sicas da WEB e manipula\u00e7\u00e3o de dados (JSON).Cria\u00e7\u00e3o de interfaces gr\u00e1ficas simples. Controle de Vers\u00e3o (git). Testes automatizados. Bibliografia Base: PERKOVIC, Ljubomir. Introdu\u00e7\u00e3o \u00e0 Computa\u00e7\u00e3o Usando Python - Um Foco no Desenvolvimento de Aplica\u00e7\u00f5es. 1 ed. LTC. 2016. Miller, Brad; Ranum, David. Como Pensar como um Cientista da Computa\u00e7\u00e3o. 2019. Dispon\u00edvel em: https://panda.ime.usp.br/pensepy/static/pensepy/index.html Bibliografia Complementar: FREEMAN, Eric. Use a Cabe\u00e7a! Aprenda Programar. 1 ed. Alta Books. 2019. DOWNEY, Allen. Pense Python: pense como um Cientista da Computa\u00e7\u00e3o. 1 ed. Novatec. 2016. Kon, Fabio. Introdu\u00e7\u00e3o \u00e0 Ci\u00eancia da Computa\u00e7\u00e3o em Python. Coursera. 2019. Dispon\u00edvel online em: https://www.coursera.org/learn/ciencia-computacao- python-conceitos Shaw, Zed A. Aprenda Python 3 do Jeito Certo: uma Introdu\u00e7\u00e3o Muito Simples ao Incr\u00edvel Mundo dos Computadores e da Codifica\u00e7\u00e3o. 2019. Alta Books","title":"inicio"},{"location":"banco_de_dados/ini/","text":"Banco de Dados \u00b6 Objetivos: Projetos e implementa\u00e7\u00f5es de bancos de dados. Ementa: Introdu\u00e7\u00e3o a banco de dados (Processamento de Arquivos vs SGBDs, arquitetura de SGBDs), modelagem de dados (conceitual, modelo entidade- relacionamento), Linguagem de Consulta e Manipula\u00e7\u00e3o de Dados (SQL), Indexa\u00e7\u00e3o, Bancos de Dados N\u00e3o Relacionais ou NoSQL (Bancos de Dados Orientados a Documentos, Bancos de Dados em Colunas, Bancos de Orientados a Grafos). Mapeamento objeto-relacional (ORM). Bibliografia Base: - Elmasri, Ramez; Navathe, Shamkant B. Sistema de Banco de Dados. 2018. Pearson. - DATE, C. J. Introdu\u00e7\u00e3o a Sistemas de Bancos de Dados. Rio de Janeiro: Elsevier, 2003. - ELMASRI, R.; NAVATHE, S. B. Sistemas de Banco de Dados. S\u00e3o Paulo: Pearson Addison Wesley, 2011. Bibliografia Complementar: - Sadalage, P. J., & Fowler, M. NoSQL distilled: a brief guide to the emerging world of polyglot persistence. 2013. Pearson Education. - Date, C. J. An introduction to database systems. 1981. Pearson Education India. - Neeraj, N. (2013). Mastering Apache Cassandra. Packt Publishing Ltd. - Banker, K. (2011). MongoDB in action. Manning Publications Co.","title":"inicio"},{"location":"banco_de_dados/ini/#banco-de-dados","text":"Objetivos: Projetos e implementa\u00e7\u00f5es de bancos de dados. Ementa: Introdu\u00e7\u00e3o a banco de dados (Processamento de Arquivos vs SGBDs, arquitetura de SGBDs), modelagem de dados (conceitual, modelo entidade- relacionamento), Linguagem de Consulta e Manipula\u00e7\u00e3o de Dados (SQL), Indexa\u00e7\u00e3o, Bancos de Dados N\u00e3o Relacionais ou NoSQL (Bancos de Dados Orientados a Documentos, Bancos de Dados em Colunas, Bancos de Orientados a Grafos). Mapeamento objeto-relacional (ORM). Bibliografia Base: - Elmasri, Ramez; Navathe, Shamkant B. Sistema de Banco de Dados. 2018. Pearson. - DATE, C. J. Introdu\u00e7\u00e3o a Sistemas de Bancos de Dados. Rio de Janeiro: Elsevier, 2003. - ELMASRI, R.; NAVATHE, S. B. Sistemas de Banco de Dados. S\u00e3o Paulo: Pearson Addison Wesley, 2011. Bibliografia Complementar: - Sadalage, P. J., & Fowler, M. NoSQL distilled: a brief guide to the emerging world of polyglot persistence. 2013. Pearson Education. - Date, C. J. An introduction to database systems. 1981. Pearson Education India. - Neeraj, N. (2013). Mastering Apache Cassandra. Packt Publishing Ltd. - Banker, K. (2011). MongoDB in action. Manning Publications Co.","title":"Banco de Dados"},{"location":"estrutura_dados/est/","text":"Estruturas de Dados \u00b6 Objetivo: Familiarizar-se com a modelagem e implementa\u00e7\u00e3o de diferentes estruturas de dados, bem como os algoritmos para gerenci\u00e1-las. Objetivos: Familiarizar os alunos com a modelagem e implementa\u00e7\u00e3o de diferentes estruturas de dados, bem como os algoritmos para gerenci\u00e1-las. Ementa: Estruturas b\u00e1sicas para representa\u00e7\u00e3o de informa\u00e7\u00f5es: pilhas, filas e listas ligadas, \u00e1rvores, grafos, tabelas de hash e suas generaliza\u00e7\u00f5es, implementa\u00e7\u00f5es. Algoritmos para constru\u00e7\u00e3o, consulta e manipula\u00e7\u00e3o de tais estruturas. Desenvolvimento, implementa\u00e7\u00e3o e testes de programas usando tais estruturas em aplica\u00e7\u00f5es espec\u00edficas. Page-Rank Bibliografia Base: - SZWARCFITER, Jayme Luiz; MARKENZON, Lilian. Estruturas de Dados e Seus Algoritmos. 2010. LTC. - EDELWEISS, Nina; GALANTE, Renata. Estruturas de Dados. 2011. Bookman. - AGUILAR, Luis Joyanes. Fundamentos de Programa\u00e7\u00e3o: Algoritmos, estruturas de dados e objetos. 2008. AMGH. Bibliografia Complementar: - Cormen, Thomas; Leiserson, Charles; Rivest, Ronald; Stein, Clifford. Algoritmos: Teoria e Pr\u00e1tica. 2012. LTC. - Thomas, Cormen. Desmistificando Algoritmos. 2017. LTC. - Maner, Udi. Introduction to Algorithms: A Creative Approach. 1989. Addison- Wesley Professional.","title":"Dados"},{"location":"estrutura_dados/est/#estruturas-de-dados","text":"Objetivo: Familiarizar-se com a modelagem e implementa\u00e7\u00e3o de diferentes estruturas de dados, bem como os algoritmos para gerenci\u00e1-las. Objetivos: Familiarizar os alunos com a modelagem e implementa\u00e7\u00e3o de diferentes estruturas de dados, bem como os algoritmos para gerenci\u00e1-las. Ementa: Estruturas b\u00e1sicas para representa\u00e7\u00e3o de informa\u00e7\u00f5es: pilhas, filas e listas ligadas, \u00e1rvores, grafos, tabelas de hash e suas generaliza\u00e7\u00f5es, implementa\u00e7\u00f5es. Algoritmos para constru\u00e7\u00e3o, consulta e manipula\u00e7\u00e3o de tais estruturas. Desenvolvimento, implementa\u00e7\u00e3o e testes de programas usando tais estruturas em aplica\u00e7\u00f5es espec\u00edficas. Page-Rank Bibliografia Base: - SZWARCFITER, Jayme Luiz; MARKENZON, Lilian. Estruturas de Dados e Seus Algoritmos. 2010. LTC. - EDELWEISS, Nina; GALANTE, Renata. Estruturas de Dados. 2011. Bookman. - AGUILAR, Luis Joyanes. Fundamentos de Programa\u00e7\u00e3o: Algoritmos, estruturas de dados e objetos. 2008. AMGH. Bibliografia Complementar: - Cormen, Thomas; Leiserson, Charles; Rivest, Ronald; Stein, Clifford. Algoritmos: Teoria e Pr\u00e1tica. 2012. LTC. - Thomas, Cormen. Desmistificando Algoritmos. 2017. LTC. - Maner, Udi. Introduction to Algorithms: A Creative Approach. 1989. Addison- Wesley Professional.","title":"Estruturas de Dados"},{"location":"fundamentos_web/fund/","text":"Fundamentos de Internet e Web \u00b6 Objetivos: Apresentar no\u00e7\u00f5es de conhecimentos sobre a estrutura de documentos na WEB. Ementa: Apresentar no\u00e7\u00f5es de conhecimentos sobre a estrutura de documentos na WEB. Ementa: Hipertexto; origens de XML e HTML (SGML); Estrutura do conte\u00fado versus apar\u00eancia do documento; tags HTML b\u00e1sicas (H1, P, etc) e extens\u00edveis (div, span, etc); tags de HTML5; Atributos b\u00e1sicos de CSS (color, text-align, etc), seletores CSS; formul\u00e1rios HTML; no\u00e7\u00f5es de manipula\u00e7\u00e3o program\u00e1tica do DOM. Bibliografia Base: - MILETTO, Evandro Manara; BERTAGNOLLI, Silvia de Castro. Desenvolvimento de Software II: Introdu\u00e7\u00e3o ao Desenvolvimento Web com HTML, CSS, JavaScript e PHP. 2014. Bookman. - TERUEL, Evandro Carlos. HTML 5 - Guia Pr\u00e1tico. 2014. \u00c9rica. - Flatschart, F\u00e1bio. HTML 5 Embarque Imediato. 2011. Brasport. Bibliografia Complementar: - FREEMAN, Elisabeth, FREEMAN, Eric. Use a cabe\u00e7a! HTML e CSS. 2015. Alta Books. - Duckett, Jon. HTML e CSS projete e construa Websites. 2016. Alta Books.","title":"Fundamentos Web"},{"location":"fundamentos_web/fund/#fundamentos-de-internet-e-web","text":"Objetivos: Apresentar no\u00e7\u00f5es de conhecimentos sobre a estrutura de documentos na WEB. Ementa: Apresentar no\u00e7\u00f5es de conhecimentos sobre a estrutura de documentos na WEB. Ementa: Hipertexto; origens de XML e HTML (SGML); Estrutura do conte\u00fado versus apar\u00eancia do documento; tags HTML b\u00e1sicas (H1, P, etc) e extens\u00edveis (div, span, etc); tags de HTML5; Atributos b\u00e1sicos de CSS (color, text-align, etc), seletores CSS; formul\u00e1rios HTML; no\u00e7\u00f5es de manipula\u00e7\u00e3o program\u00e1tica do DOM. Bibliografia Base: - MILETTO, Evandro Manara; BERTAGNOLLI, Silvia de Castro. Desenvolvimento de Software II: Introdu\u00e7\u00e3o ao Desenvolvimento Web com HTML, CSS, JavaScript e PHP. 2014. Bookman. - TERUEL, Evandro Carlos. HTML 5 - Guia Pr\u00e1tico. 2014. \u00c9rica. - Flatschart, F\u00e1bio. HTML 5 Embarque Imediato. 2011. Brasport. Bibliografia Complementar: - FREEMAN, Elisabeth, FREEMAN, Eric. Use a cabe\u00e7a! HTML e CSS. 2015. Alta Books. - Duckett, Jon. HTML e CSS projete e construa Websites. 2016. Alta Books.","title":"Fundamentos de Internet e Web"},{"location":"git/guia-comandos/","text":"Guia de Comandos \u00b6 Como verificar a vers\u00e3o do Git? \u00b6 git --version # o comando retornar\u00e1 a vers\u00e3o do Git instalada na sua m\u00e1quina. Como pedir ajuda ao Git? \u00b6 git --help # este comando ir\u00e1 abrir o manual geral do Git. Escolher o nome que voc\u00ea quer anexar \u00e0s suas transa\u00e7\u00f5es de commmit: \u00b6 git config --global user.config [ digite-seu-nome ] Escolher e-mail que voc\u00ea quer anexar aos seus commits: \u00b6 git config --global user.config [ exemplo@email.com ] Ativar coloriza\u00e7\u00e3o da linha de comandos : \u00b6 git config --global color.ui auto Criar um novo reposit\u00f3rio local: \u00b6 git init [ project-name ] # craindo um novo reposit\u00f3rio em seu diret\u00f3rio local Fazer o download de um projeto e toda hist\u00f3ria de vers\u00f5es: \u00b6 git clone [ url ] # esse comando baixa todo um reposit\u00f3rio com git j\u00e1 inicializado em seu diret\u00f3rio corrente. # normalmente clonamos um reposit\u00f3rio para podermos estudar ou mesmo fazermos altera\u00e7\u00f5es. Listar todos arquivos novos ou modifica\u00e7\u00f5es a serem comitadas (status): \u00b6 git status # Boas Pr\u00e1ticas: antes de comitar verifique o status do seu git Mostrar diferen\u00e7as entre arquivos que ainda n\u00e3o foram adicionados: \u00b6 git diff \"Capturar\" o arquivo em prepara\u00e7\u00e3o para o versionamento: \u00b6 git add [ nome-do-arquivo.html ] [ outro-arquivo.py ] # esse comando est\u00e1 adicionando seus arquivos para a \u00e1rea de staging, ou seja, est\u00e3o sendo preparados para serem comitados. ou para adicionar todos: git add . # o carcter \".\" representa todos arquivos Mostrar as diferen\u00e7as entre arquivos que est\u00e3o na \u00e1rea de staging e os arquivos da \u00faltima vers\u00e3o: \u00b6 git diff --staged # com esse comando enxergamos as modifica\u00e7\u00f5es que j\u00e1 foram adicionados (comando add) e est\u00e3o na staging area, ou seja, \u00e9 a \u00faltima verifica\u00e7\u00e3o antes do commit. Tirar arquivos da \u00e1rea de staging preservando seu conte\u00fado: \u00b6 git reset [ algum-arqivo.html ] [ outro-arquivo.css ] [ um-script.js ] # sempre podemos reavaliar se todas as mudan\u00e7as est\u00e3o corretas antes de comitarmos. Esse comando permite retirar um arquivo da staging area sem exclu\u00ed-lo Grave todas as altera\u00e7\u00f5es realizadas na hist\u00f3ria da vers\u00e3o (commit) : \u00b6 git commit -m [ \"sua-mensagem-de-commit\" ] Liste todas branches do reposit\u00f3rio corrente: \u00b6 git branch Criar uma nova branch: \u00b6 git branch [ nomme-da-branch ] Trocar para branch espec\u00edfica e atualizar o diret\u00f3rio de trabalho: \u00b6 git checkout [ nome-da-branch ] Combinar a hist\u00f3ria de uma branch espec\u00edfica com a branch atual (merge): \u00b6 git merge [ branch ] Deletar uma branch espec\u00edfica: \u00b6 git branch -d [ nome-da-branch ] # no caso passamos o argumento \"-d\" de \"delete\" para o comando git branch Deletar os arquivos de um diret\u00f3rio de trabalho e apontar a exclus\u00e3o no pr\u00f3ximo commit: \u00b6 git rm [ nome #chamamos o comando rm que vem do ingl\u00eas \"to remove\", remover Listar hist\u00f3ria da vers\u00e3o de uma branch: \u00b6 git log Mostrar metadados e o conte\u00fado de um commit espec\u00edfico \u00b6 git show [ commit ] Desfazer todos os commits feitos depois do commit: \u00b6 git reset [ commit ] Guardar temporariamente os arquivos modificados: \u00b6 git stash Fazer upload do local para o remoto: \u00b6 git push [ alias ] [ branch ] Download de toda a vers\u00e3o atualizada do remoto para o local: \u00b6 git pull Verificar arquivos ocultos \u00b6 ls -a","title":"Guia de Comandos"},{"location":"git/guia-comandos/#guia-de-comandos","text":"","title":"Guia de Comandos"},{"location":"git/guia-comandos/#como-verificar-a-versao-do-git","text":"git --version # o comando retornar\u00e1 a vers\u00e3o do Git instalada na sua m\u00e1quina.","title":"Como verificar a vers\u00e3o do Git?"},{"location":"git/guia-comandos/#como-pedir-ajuda-ao-git","text":"git --help # este comando ir\u00e1 abrir o manual geral do Git.","title":"Como pedir ajuda ao Git?"},{"location":"git/guia-comandos/#escolher-o-nome-que-voce-quer-anexar-as-suas-transacoes-de-commmit","text":"git config --global user.config [ digite-seu-nome ]","title":"Escolher o nome que voc\u00ea quer anexar \u00e0s suas transa\u00e7\u00f5es de commmit:"},{"location":"git/guia-comandos/#escolher-e-mail-que-voce-quer-anexar-aos-seus-commits","text":"git config --global user.config [ exemplo@email.com ]","title":"Escolher e-mail que voc\u00ea quer anexar aos seus commits:"},{"location":"git/guia-comandos/#ativar-colorizacao-da-linha-de-comandos","text":"git config --global color.ui auto","title":"Ativar coloriza\u00e7\u00e3o da linha de comandos :"},{"location":"git/guia-comandos/#criar-um-novo-repositorio-local","text":"git init [ project-name ] # craindo um novo reposit\u00f3rio em seu diret\u00f3rio local","title":"Criar um novo reposit\u00f3rio local:"},{"location":"git/guia-comandos/#fazer-o-download-de-um-projeto-e-toda-historia-de-versoes","text":"git clone [ url ] # esse comando baixa todo um reposit\u00f3rio com git j\u00e1 inicializado em seu diret\u00f3rio corrente. # normalmente clonamos um reposit\u00f3rio para podermos estudar ou mesmo fazermos altera\u00e7\u00f5es.","title":"Fazer o download de um projeto e toda hist\u00f3ria de vers\u00f5es:"},{"location":"git/guia-comandos/#listar-todos-arquivos-novos-ou-modificacoes-a-serem-comitadas-status","text":"git status # Boas Pr\u00e1ticas: antes de comitar verifique o status do seu git","title":"Listar todos arquivos novos ou modifica\u00e7\u00f5es  a serem comitadas (status):"},{"location":"git/guia-comandos/#mostrar-diferencas-entre-arquivos-que-ainda-nao-foram-adicionados","text":"git diff","title":"Mostrar diferen\u00e7as entre arquivos que ainda n\u00e3o foram adicionados:"},{"location":"git/guia-comandos/#capturar-o-arquivo-em-preparacao-para-o-versionamento","text":"git add [ nome-do-arquivo.html ] [ outro-arquivo.py ] # esse comando est\u00e1 adicionando seus arquivos para a \u00e1rea de staging, ou seja, est\u00e3o sendo preparados para serem comitados. ou para adicionar todos: git add . # o carcter \".\" representa todos arquivos","title":"\"Capturar\" o arquivo em prepara\u00e7\u00e3o para o versionamento:"},{"location":"git/guia-comandos/#mostrar-as-diferencas-entre-arquivos-que-estao-na-area-de-staging-e-os-arquivos-da-ultima-versao","text":"git diff --staged # com esse comando enxergamos as modifica\u00e7\u00f5es que j\u00e1 foram adicionados (comando add) e est\u00e3o na staging area, ou seja, \u00e9 a \u00faltima verifica\u00e7\u00e3o antes do commit.","title":"Mostrar as diferen\u00e7as entre arquivos que est\u00e3o na \u00e1rea de staging e os arquivos da \u00faltima vers\u00e3o:"},{"location":"git/guia-comandos/#tirar-arquivos-da-area-de-staging-preservando-seu-conteudo","text":"git reset [ algum-arqivo.html ] [ outro-arquivo.css ] [ um-script.js ] # sempre podemos reavaliar se todas as mudan\u00e7as est\u00e3o corretas antes de comitarmos. Esse comando permite retirar um arquivo da staging area sem exclu\u00ed-lo","title":"Tirar arquivos da \u00e1rea de staging preservando seu conte\u00fado:"},{"location":"git/guia-comandos/#grave-todas-as-alteracoes-realizadas-na-historia-da-versao-commit","text":"git commit -m [ \"sua-mensagem-de-commit\" ]","title":"Grave todas as altera\u00e7\u00f5es realizadas  na hist\u00f3ria da vers\u00e3o (commit) :"},{"location":"git/guia-comandos/#liste-todas-branches-do-repositorio-corrente","text":"git branch","title":"Liste todas branches do reposit\u00f3rio corrente:"},{"location":"git/guia-comandos/#criar-uma-nova-branch","text":"git branch [ nomme-da-branch ]","title":"Criar uma nova branch:"},{"location":"git/guia-comandos/#trocar-para-branch-especifica-e-atualizar-o-diretorio-de-trabalho","text":"git checkout [ nome-da-branch ]","title":"Trocar para branch espec\u00edfica e atualizar o diret\u00f3rio de trabalho:"},{"location":"git/guia-comandos/#combinar-a-historia-de-uma-branch-especifica-com-a-branch-atual-merge","text":"git merge [ branch ]","title":"Combinar a hist\u00f3ria de uma branch espec\u00edfica com a branch atual (merge):"},{"location":"git/guia-comandos/#deletar-uma-branch-especifica","text":"git branch -d [ nome-da-branch ] # no caso passamos o argumento \"-d\" de \"delete\" para o comando git branch","title":"Deletar uma branch espec\u00edfica:"},{"location":"git/guia-comandos/#deletar-os-arquivos-de-um-diretorio-de-trabalho-e-apontar-a-exclusao-no-proximo-commit","text":"git rm [ nome #chamamos o comando rm que vem do ingl\u00eas \"to remove\", remover","title":"Deletar os arquivos de um diret\u00f3rio de trabalho e apontar a exclus\u00e3o no pr\u00f3ximo commit:"},{"location":"git/guia-comandos/#listar-historia-da-versao-de-uma-branch","text":"git log","title":"Listar hist\u00f3ria da vers\u00e3o de uma branch:"},{"location":"git/guia-comandos/#mostrar-metadados-e-o-conteudo-de-um-commit-especifico","text":"git show [ commit ]","title":"Mostrar metadados e o conte\u00fado de um commit espec\u00edfico"},{"location":"git/guia-comandos/#desfazer-todos-os-commits-feitos-depois-do-commit","text":"git reset [ commit ]","title":"Desfazer todos os commits feitos depois do commit:"},{"location":"git/guia-comandos/#guardar-temporariamente-os-arquivos-modificados","text":"git stash","title":"Guardar temporariamente os arquivos modificados:"},{"location":"git/guia-comandos/#fazer-upload-do-local-para-o-remoto","text":"git push [ alias ] [ branch ]","title":"Fazer upload do local para o remoto:"},{"location":"git/guia-comandos/#download-de-toda-a-versao-atualizada-do-remoto-para-o-local","text":"git pull","title":"Download de toda a vers\u00e3o atualizada do remoto para o local:"},{"location":"git/guia-comandos/#verificar-arquivos-ocultos","text":"ls -a","title":"Verificar arquivos ocultos"},{"location":"git/perguntas-e-respostas/","text":"Perguntas e Respostas \u00b6 O que \u00e9 Git? \u00b6 Git \u00e9 um software Open Source criado por Linus Torvalds que funciona como um sistema de versionamento distribu\u00eddo moderno, que facilita a vida de qualquer pessoa durante a cria\u00e7\u00e3o e manuten\u00e7\u00e3o de projetos comerciais e de c\u00f3digo-fonte aberto. O que \u00e9 VCS? \u00b6 Controle de Vers\u00e3o \u00e9 um sistema que grava mudan\u00e7as feitas a um ou mais arquivos e que permite seja feito uma rechamada de vers\u00f5es espec\u00edficas se for preciso. O que \u00e9 CVCS? \u00b6 Uma das quest\u00f5es mais importantes da programa\u00e7\u00e3o \u00e9 que precisamos de mais pessoas colaborando no mesmo c\u00f3digo. Para lidar com isso os sistemas de Controle de Vers\u00e3o Centralizadas foram criados. Estes sistemas t\u1ebdm um \u00fanico servidor com todos os arquivos versionados. Seguran\u00e7a no Git como funciona? \u00b6 O mecanismo que o Git usa \u00e9 para criptografar e descriptografar \u00e9 o SHA-1 hash. O que SHA1? \u00b6 SHA-1 hash \u00e9 uma string de 40 caracteres em hexadeciaml (0-9 e a-f) e \u00e9 calculado com base no conte\u00fado do arquivo ou diret\u00f3rio do Git. Exemplo de SHA1 \u00b6 Um SHA-1 hash \u00e9 algo como: 24b9da6 Quais s\u00e3o os tr\u00eas estados mais importantes do Git? \u00b6 Seus arquivos podem ficar em tr\u015d est\u00e1gios: committed, modified e staged. O que \u00e9 \"comitted\" ? \u00b6 Significa que seus dados foram salvos em sua base de dados local. O que \u00e9 \"modified\" ? \u00b6 Significa que teve altra\u00e7\u00f5es e elas ainda n\u00e3o foram comitadas. O que \u00e9 \"staged\" ? \u00b6 Significa que voc\u00ea tem uma marca\u00e7\u00e3o das modifica\u00e7\u00f5es feitas no arquivo e que elas est\u00e3o prontas para ir para a pr\u00f3xima vers\u00e3o no pr\u00f3ximo commit. Como instalar o Git? \u00b6 https://git-scm.com Como obter um reposit\u00f3rio Git? \u00b6 Voc\u00ea pode iniciar um diret\u00f3rio local e torn\u00e1-lo um diret\u00f3rio git, ou, voc\u00ea pode clonar um diret\u00f3rio existente. Como iniciar um reposit\u00f3rio Git? \u00b6 git init Qual \u00e9 o comando par escrever uma mensagem de commit? \u00b6 git commit -m \"escreva sua mensagem de commit\" Qual a linguagem usada no Git? \u00b6 O git foi desenvolvido utilizando a linguagem C. Qual a diferen\u00e7a entre git pull e git fetch? \u00b6 git pull faz o download de uma determinada branch remota e atualiza o seu reposit\u00f3rio local, git fetch, ele puxa os commits de uma determinada branch e armazena em uma nova branch. Para unificar as vers\u00f5es do projetos \u00e9 usado o git merge. Como checar a diferen\u00e7a entre dois arquivos? \u00b6 diff -u novo_arquivo.html velho_arquivo.html O que s\u00e3o logs no Git? \u00b6 Mostra uma lista de recentes commits por ID's (n\u00fameros de identifica\u00e7\u00e3o \u00fanicos de cada commit) O que \u00e9 git diff ? \u00b6 Um comando que permite comparar dois commits de ID's diferentes, mostrando a diferen\u00e7a entre eles. O que \u00e9 \"detached HEAD state\" ? \u00b6 HEAD \u00e9 para onde o git est\u00e1 apontando o commit. Git permite que voc\u00ea aponte para vers\u00f5es anteriores. Como branches podem ajudar? \u00b6 Branches ajudam principalmente a desenvolver e testar novas funcionalidades sem fazer nenhuma altera\u00e7\u00e3o no projeto original . O que \u00e9 remote? \u00b6 Reposit\u00f3rios remotos s\u00e3o vers\u00f5es de seu projeto que est\u00e3o hospedadas na internet ou em alguma outra rede. O que \u00e9 git push ? \u00b6 Faz o upload do conte\u00fado de um diret\u00f3rio local para um reposit\u00f3rio remoto. O que \u00e9 git pull ? \u00b6 Este comando busca e faz o download de um reposit\u00f3rio remoto e imediatamente faz o update do reposit\u00f3rio local para combinar com o remoto. O que \u00e9 fork no GitHub? \u00b6 \u00c9 uma bifurca\u00e7\u00e3o de um projeto que voc\u00ea gerencia ou de outro proprietario, mantendo uma conex\u00e3o com o projeto original. Como adicionar arquivos na \u00e1rea de staging ? \u00b6 git add [ nome_do_arquivo.txt ] #ou git add . #o \".\" significa adicionar tudo Como ver as mudan\u00e7as na \u00e1rea de staging depois do git add ? \u00b6 git diff --staged Se voc\u00ea acidentalmente adicionar um arquivo e quiser remov\u00ea-lo? \u00b6 git reset [ nome_do_arquivo.txt ] O que \u00e9 Squasing Commits ? \u00b6 Combina\u00e7\u00e3o de v\u00e1rios commits em um \u00fanico. O que \u00e9 \"estrelar\"( starring ) um projeto no GitHub? \u00b6 \u00c9 um jeito f\u00e1cil de voc\u00ea encontrar um reposit\u00f3rio de seu interesse. O GitHub faz uma lista dos reposit\u00f3rios que voc\u00ea marcou uma estrela, tornando f\u00e1cil encontr\u00e1-lo depois. O que \u00e9 Pull Request? \u00b6 Diz aos outros sobre as mudan\u00e7as que voc\u00ea est\u00e1 empurrando para um reposit\u00f3rio. Uma vez enviado, as partes interessadas poder\u00e3o revisar, discutir, planejar, etc. O que significam Issues no GitHub ? \u00b6 \u00c9 um rastreador, por exemplo, quando seu projeto cresce, voc\u00ea usar\u00e1 Issues para organizar tarefas, resolver bugs, planejar novas funcionalidades. GitHub \u00e9 gratuito? \u00b6 Sim, embora ofere\u00e7a planos empresariais em algumas situa\u00e7\u00f5es. Como checar a vers\u00e3o anterior de um c\u00f3digo? \u00b6 git checkout [ commit_id ] Como inicializar um diret\u00f3rio vazio com Git? \u00b6 git init [ project-name ] O que \u00e9 Git Bash? \u00b6 O Git Bash \u00e9 o aplicativo para Windows que oferece a camada de emula\u00e7\u00e3o para a experi\u00eancia de linha de comando Git usando o bash. O que \u00e9 Git Stash? \u00b6 \u00c9 Um jeito de salvar o trabalho para mais tarde, quando voc\u00ea ainda n\u00e3o quer adicionar e fazer o commit. O que \u00e9 \"merging\" ? \u00b6 \u00c9 a unifica\u00e7\u00e3o dos ramos criados no projeto, por exemplo: main e version2, quando usamos o merge ele unifica os dois na branch escolhida, \u00e9 comum manter a main como a ramifica\u00e7\u00e3o principal do projeto. Por que conflitos de merge acontecem? \u00b6 Estes conflitos acontecem quando o mesmo arquivo \u00e9 modificado na mesma regi\u00e3o por duas pessoas diferentes e comittado em sequ\u00eancia. Esses conflitos necessitam da interven\u00e7\u00e3o humana para informar ao git qual ser\u00e1 a nova vers\u00e3o. O que \u00e9 Git Head ? \u00b6 \u00c9 uma refer\u00eancia ao objeto do commit. Por padr\u00e3o a cabe\u00e7a vem apontada para a Master/Main. O que \u00e9 Git Origin ? \u00b6 \u00c9 o reposit\u00f3rio que d\u00e1 origem a um reposit\u00f3rio clonado. O que \u00e9 Git Branch ? \u00b6 \u00c9 algo que faz parte da vida di\u00e1ria do desenvolvimento de softwares. Efetivamente, branches s\u00e3o uma imagem instant\u00e2nea das suas mudan\u00e7as derivadas de uma ourta vers\u00e3o. Quais s\u00e3o as alternativas ao GitHub ? \u00b6 GitLab, BitBuckett, SourceForge, GitKraken, LaunchPad, etc... Um pouco sobre o GitLab \u00b6 Muito similar ao GitHub, oferece code reviews, time tracking, issue tracking, integrated project, wiki, continuos integration, automated testing and code delivery. Um pouco sobre o BitBuckett \u00b6 Tamb\u00e9m muito popular, mas gratuito para equipes de at\u00e9 5 membros. O BitBuckett trabalha com pipelines, pull requets, smart mirroring, issue tracking, flexible deployment models, IP whitelisting e branch permissions, que permite proteger o trabalho.","title":"Perguntas?"},{"location":"git/perguntas-e-respostas/#perguntas-e-respostas","text":"","title":"Perguntas e Respostas"},{"location":"git/perguntas-e-respostas/#o-que-e-git","text":"Git \u00e9 um software Open Source criado por Linus Torvalds que funciona como um sistema de versionamento distribu\u00eddo moderno, que facilita a vida de qualquer pessoa durante a cria\u00e7\u00e3o e manuten\u00e7\u00e3o de projetos comerciais e de c\u00f3digo-fonte aberto.","title":"O que \u00e9 Git?"},{"location":"git/perguntas-e-respostas/#o-que-e-vcs","text":"Controle de Vers\u00e3o \u00e9 um sistema que grava mudan\u00e7as feitas a um ou mais arquivos e que permite seja feito uma rechamada de vers\u00f5es espec\u00edficas se for preciso.","title":"O que \u00e9 VCS?"},{"location":"git/perguntas-e-respostas/#o-que-e-cvcs","text":"Uma das quest\u00f5es mais importantes da programa\u00e7\u00e3o \u00e9 que precisamos de mais pessoas colaborando no mesmo c\u00f3digo. Para lidar com isso os sistemas de Controle de Vers\u00e3o Centralizadas foram criados. Estes sistemas t\u1ebdm um \u00fanico servidor com todos os arquivos versionados.","title":"O que \u00e9 CVCS?"},{"location":"git/perguntas-e-respostas/#seguranca-no-git-como-funciona","text":"O mecanismo que o Git usa \u00e9 para criptografar e descriptografar \u00e9 o SHA-1 hash.","title":"Seguran\u00e7a no Git como funciona?"},{"location":"git/perguntas-e-respostas/#o-que-sha1","text":"SHA-1 hash \u00e9 uma string de 40 caracteres em hexadeciaml (0-9 e a-f) e \u00e9 calculado com base no conte\u00fado do arquivo ou diret\u00f3rio do Git.","title":"O que SHA1?"},{"location":"git/perguntas-e-respostas/#exemplo-de-sha1","text":"Um SHA-1 hash \u00e9 algo como: 24b9da6","title":"Exemplo de SHA1"},{"location":"git/perguntas-e-respostas/#quais-sao-os-tres-estados-mais-importantes-do-git","text":"Seus arquivos podem ficar em tr\u015d est\u00e1gios: committed, modified e staged.","title":"Quais s\u00e3o os tr\u00eas estados mais importantes do Git?"},{"location":"git/perguntas-e-respostas/#o-que-e-comitted","text":"Significa que seus dados foram salvos em sua base de dados local.","title":"O que \u00e9 \"comitted\" ?"},{"location":"git/perguntas-e-respostas/#o-que-e-modified","text":"Significa que teve altra\u00e7\u00f5es e elas ainda n\u00e3o foram comitadas.","title":"O que \u00e9 \"modified\" ?"},{"location":"git/perguntas-e-respostas/#o-que-e-staged","text":"Significa que voc\u00ea tem uma marca\u00e7\u00e3o das modifica\u00e7\u00f5es feitas no arquivo e que elas est\u00e3o prontas para ir para a pr\u00f3xima vers\u00e3o no pr\u00f3ximo commit.","title":"O que \u00e9 \"staged\" ?"},{"location":"git/perguntas-e-respostas/#como-instalar-o-git","text":"https://git-scm.com","title":"Como instalar o Git?"},{"location":"git/perguntas-e-respostas/#como-obter-um-repositorio-git","text":"Voc\u00ea pode iniciar um diret\u00f3rio local e torn\u00e1-lo um diret\u00f3rio git, ou, voc\u00ea pode clonar um diret\u00f3rio existente.","title":"Como obter um reposit\u00f3rio Git?"},{"location":"git/perguntas-e-respostas/#como-iniciar-um-repositorio-git","text":"git init","title":"Como iniciar um reposit\u00f3rio Git?"},{"location":"git/perguntas-e-respostas/#qual-e-o-comando-par-escrever-uma-mensagem-de-commit","text":"git commit -m \"escreva sua mensagem de commit\"","title":"Qual \u00e9 o comando par escrever uma mensagem de commit?"},{"location":"git/perguntas-e-respostas/#qual-a-linguagem-usada-no-git","text":"O git foi desenvolvido utilizando a linguagem C.","title":"Qual a linguagem usada no Git?"},{"location":"git/perguntas-e-respostas/#qual-a-diferenca-entre-git-pull-e-git-fetch","text":"git pull faz o download de uma determinada branch remota e atualiza o seu reposit\u00f3rio local, git fetch, ele puxa os commits de uma determinada branch e armazena em uma nova branch. Para unificar as vers\u00f5es do projetos \u00e9 usado o git merge.","title":"Qual a diferen\u00e7a entre git pull e git fetch?"},{"location":"git/perguntas-e-respostas/#como-checar-a-diferenca-entre-dois-arquivos","text":"diff -u novo_arquivo.html velho_arquivo.html","title":"Como checar a diferen\u00e7a entre dois arquivos?"},{"location":"git/perguntas-e-respostas/#o-que-sao-logs-no-git","text":"Mostra uma lista de recentes commits por ID's (n\u00fameros de identifica\u00e7\u00e3o \u00fanicos de cada commit)","title":"O que s\u00e3o logs no Git?"},{"location":"git/perguntas-e-respostas/#o-que-e-git-diff","text":"Um comando que permite comparar dois commits de ID's diferentes, mostrando a diferen\u00e7a entre eles.","title":"O que \u00e9 git diff ?"},{"location":"git/perguntas-e-respostas/#o-que-e-detached-head-state","text":"HEAD \u00e9 para onde o git est\u00e1 apontando o commit. Git permite que voc\u00ea aponte para vers\u00f5es anteriores.","title":"O que \u00e9 \"detached HEAD state\" ?"},{"location":"git/perguntas-e-respostas/#como-branches-podem-ajudar","text":"Branches ajudam principalmente a desenvolver e testar novas funcionalidades sem fazer nenhuma altera\u00e7\u00e3o no projeto original .","title":"Como branches podem ajudar?"},{"location":"git/perguntas-e-respostas/#o-que-e-remote","text":"Reposit\u00f3rios remotos s\u00e3o vers\u00f5es de seu projeto que est\u00e3o hospedadas na internet ou em alguma outra rede.","title":"O que \u00e9 remote?"},{"location":"git/perguntas-e-respostas/#o-que-e-git-push","text":"Faz o upload do conte\u00fado de um diret\u00f3rio local para um reposit\u00f3rio remoto.","title":"O que \u00e9 git push ?"},{"location":"git/perguntas-e-respostas/#o-que-e-git-pull","text":"Este comando busca e faz o download de um reposit\u00f3rio remoto e imediatamente faz o update do reposit\u00f3rio local para combinar com o remoto.","title":"O que \u00e9 git pull ?"},{"location":"git/perguntas-e-respostas/#o-que-e-fork-no-github","text":"\u00c9 uma bifurca\u00e7\u00e3o de um projeto que voc\u00ea gerencia ou de outro proprietario, mantendo uma conex\u00e3o com o projeto original.","title":"O que \u00e9 fork no GitHub?"},{"location":"git/perguntas-e-respostas/#como-adicionar-arquivos-na-area-de-staging","text":"git add [ nome_do_arquivo.txt ] #ou git add . #o \".\" significa adicionar tudo","title":"Como adicionar arquivos na \u00e1rea de staging ?"},{"location":"git/perguntas-e-respostas/#como-ver-as-mudancas-na-area-de-staging-depois-do-git-add","text":"git diff --staged","title":"Como ver as mudan\u00e7as na \u00e1rea de staging depois do git add ?"},{"location":"git/perguntas-e-respostas/#se-voce-acidentalmente-adicionar-um-arquivo-e-quiser-remove-lo","text":"git reset [ nome_do_arquivo.txt ]","title":"Se voc\u00ea acidentalmente adicionar um arquivo e quiser remov\u00ea-lo?"},{"location":"git/perguntas-e-respostas/#o-que-e-squasing-commits","text":"Combina\u00e7\u00e3o de v\u00e1rios commits em um \u00fanico.","title":"O que \u00e9 Squasing Commits ?"},{"location":"git/perguntas-e-respostas/#o-que-e-estrelarstarring-um-projeto-no-github","text":"\u00c9 um jeito f\u00e1cil de voc\u00ea encontrar um reposit\u00f3rio de seu interesse. O GitHub faz uma lista dos reposit\u00f3rios que voc\u00ea marcou uma estrela, tornando f\u00e1cil encontr\u00e1-lo depois.","title":"O que \u00e9 \"estrelar\"(starring) um projeto no GitHub?"},{"location":"git/perguntas-e-respostas/#o-que-e-pull-request","text":"Diz aos outros sobre as mudan\u00e7as que voc\u00ea est\u00e1 empurrando para um reposit\u00f3rio. Uma vez enviado, as partes interessadas poder\u00e3o revisar, discutir, planejar, etc.","title":"O que \u00e9 Pull Request?"},{"location":"git/perguntas-e-respostas/#o-que-significam-issues-no-github","text":"\u00c9 um rastreador, por exemplo, quando seu projeto cresce, voc\u00ea usar\u00e1 Issues para organizar tarefas, resolver bugs, planejar novas funcionalidades.","title":"O que significam Issues no GitHub ?"},{"location":"git/perguntas-e-respostas/#github-e-gratuito","text":"Sim, embora ofere\u00e7a planos empresariais em algumas situa\u00e7\u00f5es.","title":"GitHub \u00e9 gratuito?"},{"location":"git/perguntas-e-respostas/#como-checar-a-versao-anterior-de-um-codigo","text":"git checkout [ commit_id ]","title":"Como checar a vers\u00e3o anterior de um c\u00f3digo?"},{"location":"git/perguntas-e-respostas/#como-inicializar-um-diretorio-vazio-com-git","text":"git init [ project-name ]","title":"Como inicializar um diret\u00f3rio vazio com Git?"},{"location":"git/perguntas-e-respostas/#o-que-e-git-bash","text":"O Git Bash \u00e9 o aplicativo para Windows que oferece a camada de emula\u00e7\u00e3o para a experi\u00eancia de linha de comando Git usando o bash.","title":"O que \u00e9 Git Bash?"},{"location":"git/perguntas-e-respostas/#o-que-e-git-stash","text":"\u00c9 Um jeito de salvar o trabalho para mais tarde, quando voc\u00ea ainda n\u00e3o quer adicionar e fazer o commit.","title":"O que \u00e9 Git Stash?"},{"location":"git/perguntas-e-respostas/#o-que-e-merging","text":"\u00c9 a unifica\u00e7\u00e3o dos ramos criados no projeto, por exemplo: main e version2, quando usamos o merge ele unifica os dois na branch escolhida, \u00e9 comum manter a main como a ramifica\u00e7\u00e3o principal do projeto.","title":"O que \u00e9 \"merging\" ?"},{"location":"git/perguntas-e-respostas/#por-que-conflitos-de-merge-acontecem","text":"Estes conflitos acontecem quando o mesmo arquivo \u00e9 modificado na mesma regi\u00e3o por duas pessoas diferentes e comittado em sequ\u00eancia. Esses conflitos necessitam da interven\u00e7\u00e3o humana para informar ao git qual ser\u00e1 a nova vers\u00e3o.","title":"Por que conflitos de merge acontecem?"},{"location":"git/perguntas-e-respostas/#o-que-e-git-head","text":"\u00c9 uma refer\u00eancia ao objeto do commit. Por padr\u00e3o a cabe\u00e7a vem apontada para a Master/Main.","title":"O que \u00e9 Git Head ?"},{"location":"git/perguntas-e-respostas/#o-que-e-git-origin","text":"\u00c9 o reposit\u00f3rio que d\u00e1 origem a um reposit\u00f3rio clonado.","title":"O que \u00e9 Git Origin ?"},{"location":"git/perguntas-e-respostas/#o-que-e-git-branch","text":"\u00c9 algo que faz parte da vida di\u00e1ria do desenvolvimento de softwares. Efetivamente, branches s\u00e3o uma imagem instant\u00e2nea das suas mudan\u00e7as derivadas de uma ourta vers\u00e3o.","title":"O que \u00e9 Git Branch ?"},{"location":"git/perguntas-e-respostas/#quais-sao-as-alternativas-ao-github","text":"GitLab, BitBuckett, SourceForge, GitKraken, LaunchPad, etc...","title":"Quais s\u00e3o as alternativas ao GitHub ?"},{"location":"git/perguntas-e-respostas/#um-pouco-sobre-o-gitlab","text":"Muito similar ao GitHub, oferece code reviews, time tracking, issue tracking, integrated project, wiki, continuos integration, automated testing and code delivery.","title":"Um pouco sobre o GitLab"},{"location":"git/perguntas-e-respostas/#um-pouco-sobre-o-bitbuckett","text":"Tamb\u00e9m muito popular, mas gratuito para equipes de at\u00e9 5 membros. O BitBuckett trabalha com pipelines, pull requets, smart mirroring, issue tracking, flexible deployment models, IP whitelisting e branch permissions, que permite proteger o trabalho.","title":"Um pouco sobre o BitBuckett"},{"location":"git/ultra-basico/","text":"Primeiro Contato com Git \u00b6 Pr\u00e9-requisitos para se aprender Git b\u00e1sico \u00b6 Embora Git seja de fato um programa muito simples, f\u00e1cil e divertido de usar ele requer alguns conceitos b\u00e1sicos anteriores. Se voc\u00ea j\u00e1 tiver alguma experi\u00eancia com o Terminal de Comandos, tudo ser\u00e1 muito mais f\u00e1cil. Se voc\u00ea ainda n\u00e3o utiliza o Terminal de Comandos pense em come\u00e7ar a usar pois ele ir\u00e1 te ajudar em diversas fun\u00e7\u00f5es. O recomendado \u00e9 saber o b\u00e1sico dos comandos de navega\u00e7\u00e3o no terminal, como criar um diret\u00f3rio, como criar um arquivo, com listar diret\u00f3rios e arquivos, entre outros. - Usando Terminal de Comandos no Windows - Usando Terminal no MacOS - Guia de Comandos no Terminal - Linux Instalando o Git em sua m\u00e1quina. \u00b6 Instala\u00e7\u00e3o para Windows Instalando em MacOS Instalando em sistemas Linux Verificando a vers\u00e3o instalada \u00b6 Inicie um terminal de comandos ou git bash Certifique-se de que o git est\u00e1 istalado com o comando: git --version Se voc\u00ea recebeu confirma\u00e7\u00e3o da vers\u00e3o, continue. Configurando GitHub localmente \u00b6 Inicie o Terminal e digite o seguinte comando para adicionar seu nome de usu\u00e1rio Github: git config--global user.name \"seu_github_username\" Em seguida, adicione seu e-mail usando este comando: git config--global user.email \"seu_email@github.com\" Iniciando um reposit\u00f3rio \u00b6 Navegue pelo terminal de comandos at\u00e9 o diret\u00f3rio em que deseja iniciar o reposit\u00f3rio. Certifique-se que est\u00e1 no diret\u00f3rio correto com o comando pwd (print working directory): pwd e digite o comando que incia o Git no seu diret\u00f3rio corrente: git init ou, caso o reposit\u00f3rio j\u00e1 exista no GitHub, voc\u00ea poder\u00e1 clonar: git clone Adicionando Arquivos e Preparando o Commit: \u00b6 Agora que voc\u00ea j\u00e1 trabalhou no seu c\u00f3digo \u00e9 hora de adicion\u00e1-lo para a vers\u00e3o corrente. Para aicionar arquivos use o comando: git add Analisando o Status antes do Commit: \u00b6 O Git permite que voc\u00ea veja as mudan\u00e7as adicionadas antes de comit\u00e1-las, ou seja, transfer\u00ed-las para a vers\u00e3o corrente. Com o comando: git status Voc\u00ea receber\u00e1 um texto em ingl\u00eas mais ou menos assim: Por mais que ingl\u00eas n\u00e3o seja seu forte observe a informa\u00e7\u00e3o e tente compreender o relat\u00f3rio de status do Git . Aos poucos se tornar\u00e1 natural analisar o status fornecido pelo Git. Observe as informa\u00e7\u00f5es em destaque, elas se referem a sua branch atual, e depois apontam arquivos que ainda n\u00e3o foram adicionados para o commit. Comitando: \u00b6 Com tudo conferido voc\u00ea j\u00e1 pode mandar suas altera\u00e7\u00f5es para a vers\u00e3o mais recente do c\u00f3digo, e isso se chama fazer commit . Commit \u00e9 uma palavra em ingl\u00eas que no caso poderia ser traduzida para entregar, enviar. Para dar um commit \u00e9 muito simples: git commit -m \"sua mensagem de commit\" Usa-se o comando commit com a tag \"-m\" para escrevermos uma mensagem. A mensagem de commit dever\u00e1 ser clara e limpa, no come\u00e7o o mais comum \u00e9 \"primeiro commit\", \"atualizando arquivo \", etc. Adicionando um reposit\u00f3rio remoto: \u00b6 Com o commit, atualizamos apenas a vers\u00e3o do c\u00f3digo que est\u00e1 em nossa m\u00e1quina. Agora enviaremos ao reposit\u00f3rio no GitHUb: Se o reposit\u00f3rio foi inicializado no diret\u00f3rio local precisamos dar o seguinte comando: git remote add origin [ url-do-seu-repositorio-do-github ] Esse passo \u00e9 para voc\u00ea dizer ao git qual \u00e9 o seu endere\u00e7o do diret\u00f3rio. Perceba que a URL que voc\u00ea deve inserir termina com \".git\" Voc\u00ea acha nessa parte do github: Escolha o m\u00e9todo HTTPS se ainda n\u00e3o tiver consigurado o SSH. Levantando as modifica\u00e7\u00f5es feitas para o reposit\u00f3rio remoto (push) \u00b6 git push -u origin [ nome-da-branch ] Se tudo der certo voc\u00ea dever\u00e1 acessar seu reposit\u00f3rio do GitHub e ele j\u00e1 estar\u00e1 atualizado com as \u00faltimas modifica\u00e7\u00f5es. Verifique! Em caso de alguma mensagem de erro no terminal, procure interpretar o contexto. O comando git push \u00e9 essencial para levantar seus arquivos para o reposit\u00f3rio remoto. A branch incialmente pode ser chamada de main ou master, sempre verifique no git status qual \u00e9 sua branch (essa \u00e9 a informa\u00e7\u00e3o da primeira linha). Atualizando o reposit\u00f3rio remoto com o atual (pull): \u00b6 para voc\u00ea atualizar o seu diret\u00f3rio com o reposit\u00f3rio remoto d\u00ea o comando git pull Verifique se no diret\u00f3rio da sua m\u00e1qiuna constam todos os arquivos que constam no github. Para aprender mais sobre os comandos git e o github confira a documenta\u00e7\u00e3o do GitHub: https://docs.github.com/pt","title":"Ultra Basico"},{"location":"git/ultra-basico/#primeiro-contato-com-git","text":"","title":"Primeiro Contato com Git"},{"location":"git/ultra-basico/#pre-requisitos-para-se-aprender-git-basico","text":"Embora Git seja de fato um programa muito simples, f\u00e1cil e divertido de usar ele requer alguns conceitos b\u00e1sicos anteriores. Se voc\u00ea j\u00e1 tiver alguma experi\u00eancia com o Terminal de Comandos, tudo ser\u00e1 muito mais f\u00e1cil. Se voc\u00ea ainda n\u00e3o utiliza o Terminal de Comandos pense em come\u00e7ar a usar pois ele ir\u00e1 te ajudar em diversas fun\u00e7\u00f5es. O recomendado \u00e9 saber o b\u00e1sico dos comandos de navega\u00e7\u00e3o no terminal, como criar um diret\u00f3rio, como criar um arquivo, com listar diret\u00f3rios e arquivos, entre outros. - Usando Terminal de Comandos no Windows - Usando Terminal no MacOS - Guia de Comandos no Terminal - Linux","title":"Pr\u00e9-requisitos para se aprender Git b\u00e1sico"},{"location":"git/ultra-basico/#instalando-o-git-em-sua-maquina","text":"Instala\u00e7\u00e3o para Windows Instalando em MacOS Instalando em sistemas Linux","title":"Instalando o Git em sua m\u00e1quina."},{"location":"git/ultra-basico/#verificando-a-versao-instalada","text":"Inicie um terminal de comandos ou git bash Certifique-se de que o git est\u00e1 istalado com o comando: git --version Se voc\u00ea recebeu confirma\u00e7\u00e3o da vers\u00e3o, continue.","title":"Verificando a vers\u00e3o instalada"},{"location":"git/ultra-basico/#configurando-github-localmente","text":"Inicie o Terminal e digite o seguinte comando para adicionar seu nome de usu\u00e1rio Github: git config--global user.name \"seu_github_username\" Em seguida, adicione seu e-mail usando este comando: git config--global user.email \"seu_email@github.com\"","title":"Configurando GitHub localmente"},{"location":"git/ultra-basico/#iniciando-um-repositorio","text":"Navegue pelo terminal de comandos at\u00e9 o diret\u00f3rio em que deseja iniciar o reposit\u00f3rio. Certifique-se que est\u00e1 no diret\u00f3rio correto com o comando pwd (print working directory): pwd e digite o comando que incia o Git no seu diret\u00f3rio corrente: git init ou, caso o reposit\u00f3rio j\u00e1 exista no GitHub, voc\u00ea poder\u00e1 clonar: git clone","title":"Iniciando um reposit\u00f3rio"},{"location":"git/ultra-basico/#adicionando-arquivos-e-preparando-o-commit","text":"Agora que voc\u00ea j\u00e1 trabalhou no seu c\u00f3digo \u00e9 hora de adicion\u00e1-lo para a vers\u00e3o corrente. Para aicionar arquivos use o comando: git add","title":"Adicionando Arquivos e Preparando o Commit:"},{"location":"git/ultra-basico/#analisando-o-status-antes-do-commit","text":"O Git permite que voc\u00ea veja as mudan\u00e7as adicionadas antes de comit\u00e1-las, ou seja, transfer\u00ed-las para a vers\u00e3o corrente. Com o comando: git status Voc\u00ea receber\u00e1 um texto em ingl\u00eas mais ou menos assim: Por mais que ingl\u00eas n\u00e3o seja seu forte observe a informa\u00e7\u00e3o e tente compreender o relat\u00f3rio de status do Git . Aos poucos se tornar\u00e1 natural analisar o status fornecido pelo Git. Observe as informa\u00e7\u00f5es em destaque, elas se referem a sua branch atual, e depois apontam arquivos que ainda n\u00e3o foram adicionados para o commit.","title":"Analisando o Status antes do Commit:"},{"location":"git/ultra-basico/#comitando","text":"Com tudo conferido voc\u00ea j\u00e1 pode mandar suas altera\u00e7\u00f5es para a vers\u00e3o mais recente do c\u00f3digo, e isso se chama fazer commit . Commit \u00e9 uma palavra em ingl\u00eas que no caso poderia ser traduzida para entregar, enviar. Para dar um commit \u00e9 muito simples: git commit -m \"sua mensagem de commit\" Usa-se o comando commit com a tag \"-m\" para escrevermos uma mensagem. A mensagem de commit dever\u00e1 ser clara e limpa, no come\u00e7o o mais comum \u00e9 \"primeiro commit\", \"atualizando arquivo \", etc.","title":"Comitando:"},{"location":"git/ultra-basico/#adicionando-um-repositorio-remoto","text":"Com o commit, atualizamos apenas a vers\u00e3o do c\u00f3digo que est\u00e1 em nossa m\u00e1quina. Agora enviaremos ao reposit\u00f3rio no GitHUb: Se o reposit\u00f3rio foi inicializado no diret\u00f3rio local precisamos dar o seguinte comando: git remote add origin [ url-do-seu-repositorio-do-github ] Esse passo \u00e9 para voc\u00ea dizer ao git qual \u00e9 o seu endere\u00e7o do diret\u00f3rio. Perceba que a URL que voc\u00ea deve inserir termina com \".git\" Voc\u00ea acha nessa parte do github: Escolha o m\u00e9todo HTTPS se ainda n\u00e3o tiver consigurado o SSH.","title":"Adicionando um reposit\u00f3rio remoto:"},{"location":"git/ultra-basico/#levantando-as-modificacoes-feitas-para-o-repositorio-remoto-push","text":"git push -u origin [ nome-da-branch ] Se tudo der certo voc\u00ea dever\u00e1 acessar seu reposit\u00f3rio do GitHub e ele j\u00e1 estar\u00e1 atualizado com as \u00faltimas modifica\u00e7\u00f5es. Verifique! Em caso de alguma mensagem de erro no terminal, procure interpretar o contexto. O comando git push \u00e9 essencial para levantar seus arquivos para o reposit\u00f3rio remoto. A branch incialmente pode ser chamada de main ou master, sempre verifique no git status qual \u00e9 sua branch (essa \u00e9 a informa\u00e7\u00e3o da primeira linha).","title":"Levantando as modifica\u00e7\u00f5es feitas para o reposit\u00f3rio remoto (push)"},{"location":"git/ultra-basico/#atualizando-o-repositorio-remoto-com-o-atual-pull","text":"para voc\u00ea atualizar o seu diret\u00f3rio com o reposit\u00f3rio remoto d\u00ea o comando git pull Verifique se no diret\u00f3rio da sua m\u00e1qiuna constam todos os arquivos que constam no github. Para aprender mais sobre os comandos git e o github confira a documenta\u00e7\u00e3o do GitHub: https://docs.github.com/pt","title":"Atualizando o reposit\u00f3rio remoto com o atual (pull):"}]}